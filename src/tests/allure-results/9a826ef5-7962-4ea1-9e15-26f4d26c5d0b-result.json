{"name": "test_register_demo_user_using_practice_form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=115.0.5790.114)\nStacktrace:\n0   chromedriver                        0x000000010be7daf8 chromedriver + 4987640\n1   chromedriver                        0x000000010be74eb3 chromedriver + 4951731\n2   chromedriver                        0x000000010ba28716 chromedriver + 444182\n3   chromedriver                        0x000000010ba0d56a chromedriver + 333162\n4   chromedriver                        0x000000010ba0b16c chromedriver + 323948\n5   chromedriver                        0x000000010ba0b70a chromedriver + 325386\n6   chromedriver                        0x000000010ba2abf0 chromedriver + 453616\n7   chromedriver                        0x000000010bab0345 chromedriver + 1000261\n8   chromedriver                        0x000000010ba94b12 chromedriver + 887570\n9   chromedriver                        0x000000010baafd31 chromedriver + 998705\n10  chromedriver                        0x000000010ba948e3 chromedriver + 887011\n11  chromedriver                        0x000000010ba609b9 chromedriver + 674233\n12  chromedriver                        0x000000010ba61b9e chromedriver + 678814\n13  chromedriver                        0x000000010be39dc9 chromedriver + 4709833\n14  chromedriver                        0x000000010be3ede4 chromedriver + 4730340\n15  chromedriver                        0x000000010be45c99 chromedriver + 4758681\n16  chromedriver                        0x000000010be3fb3a chromedriver + 4733754\n17  chromedriver                        0x000000010be1335c chromedriver + 4551516\n18  chromedriver                        0x000000010be5d908 chromedriver + 4856072\n19  chromedriver                        0x000000010be5da87 chromedriver + 4856455\n20  chromedriver                        0x000000010be6ddef chromedriver + 4922863\n21  libsystem_pthread.dylib             0x00007ff80cd3f1d3 _pthread_start + 125\n22  libsystem_pthread.dylib             0x00007ff80cd3abd3 thread_start + 15", "trace": "@allure.label(\"owner\", \"abarashkov\")\n    @allure.tag('web')\n    @allure.severity(Severity.NORMAL)\n    @allure.story('With allure steps')\n    def test_register_demo_user_using_practice_form():\n    \n        app = RegistrationPage()\n    \n        with allure.step(\"Should open demoqa registration form\"):\n>           app.open_demoqa_practice_form()\n\ne2e.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pages/app.py:11: in open_demoqa_practice_form\n    browser.open('/automation-practice-form')\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/configuration.py:253: in get\n    driver.get(url)\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:355: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10d3dd910>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...ff80cd3f1d3 _pthread_start + 125\\\\n22  libsystem_pthread.dylib             0x00007ff80cd3abd3 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=115.0.5790.114)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010be7daf8 chromedriver + 4987640\nE       1   chromedriver                        0x000000010be74eb3 chromedriver + 4951731\nE       2   chromedriver                        0x000000010ba28716 chromedriver + 444182\nE       3   chromedriver                        0x000000010ba0d56a chromedriver + 333162\nE       4   chromedriver                        0x000000010ba0b16c chromedriver + 323948\nE       5   chromedriver                        0x000000010ba0b70a chromedriver + 325386\nE       6   chromedriver                        0x000000010ba2abf0 chromedriver + 453616\nE       7   chromedriver                        0x000000010bab0345 chromedriver + 1000261\nE       8   chromedriver                        0x000000010ba94b12 chromedriver + 887570\nE       9   chromedriver                        0x000000010baafd31 chromedriver + 998705\nE       10  chromedriver                        0x000000010ba948e3 chromedriver + 887011\nE       11  chromedriver                        0x000000010ba609b9 chromedriver + 674233\nE       12  chromedriver                        0x000000010ba61b9e chromedriver + 678814\nE       13  chromedriver                        0x000000010be39dc9 chromedriver + 4709833\nE       14  chromedriver                        0x000000010be3ede4 chromedriver + 4730340\nE       15  chromedriver                        0x000000010be45c99 chromedriver + 4758681\nE       16  chromedriver                        0x000000010be3fb3a chromedriver + 4733754\nE       17  chromedriver                        0x000000010be1335c chromedriver + 4551516\nE       18  chromedriver                        0x000000010be5d908 chromedriver + 4856072\nE       19  chromedriver                        0x000000010be5da87 chromedriver + 4856455\nE       20  chromedriver                        0x000000010be6ddef chromedriver + 4922863\nE       21  libsystem_pthread.dylib             0x00007ff80cd3f1d3 _pthread_start + 125\nE       22  libsystem_pthread.dylib             0x00007ff80cd3abd3 thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: InvalidArgumentException"}, "steps": [{"name": "Should open demoqa registration form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=115.0.5790.114)\nStacktrace:\n0   chromedriver                        0x000000010be7daf8 chromedriver + 4987640\n1   chromedriver                        0x000000010be74eb3 chromedriver + 4951731\n2   chromedriver                        0x000000010ba28716 chromedriver + 444182\n3   chromedriver                        0x000000010ba0d56a chromedriver + 333162\n4   chromedriver                        0x000000010ba0b16c chromedriver + 323948\n5   chromedriver                        0x000000010ba0b70a chromedriver + 325386\n6   chromedriver                        0x000000010ba2abf0 chromedriver + 453616\n7   chromedriver                        0x000000010bab0345 chromedriver + 1000261\n8   chromedriver                        0x000000010ba94b12 chromedriver + 887570\n9   chromedriver                        0x000000010baafd31 chromedriver + 998705\n10  chromedriver                        0x000000010ba948e3 chromedriver + 887011\n11  chromedriver                        0x000000010ba609b9 chromedriver + 674233\n12  chromedriver                        0x000000010ba61b9e chromedriver + 678814\n13  chromedriver                        0x000000010be39dc9 chromedriver + 4709833\n14  chromedriver                        0x000000010be3ede4 chromedriver + 4730340\n15  chromedriver                        0x000000010be45c99 chromedriver + 4758681\n16  chromedriver                        0x000000010be3fb3a chromedriver + 4733754\n17  chromedriver                        0x000000010be1335c chromedriver + 4551516\n18  chromedriver                        0x000000010be5d908 chromedriver + 4856072\n19  chromedriver                        0x000000010be5da87 chromedriver + 4856455\n20  chromedriver                        0x000000010be6ddef chromedriver + 4922863\n21  libsystem_pthread.dylib             0x00007ff80cd3f1d3 _pthread_start + 125\n22  libsystem_pthread.dylib             0x00007ff80cd3abd3 thread_start + 15\n\n", "trace": "  File \"/Users/alexanderbarashkov/PycharmProjects/ABarashkov_Python_QAGuru_6_11/src/tests/e2e.py\", line 16, in test_register_demo_user_using_practice_form\n    app.open_demoqa_practice_form()\n  File \"/Users/alexanderbarashkov/PycharmProjects/ABarashkov_Python_QAGuru_6_11/src/pages/app.py\", line 11, in open_demoqa_practice_form\n    browser.open('/automation-practice-form')\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selene/core/configuration.py\", line 253, in get\n    driver.get(url)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 355, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1691096591102, "stop": 1691096594145}], "attachments": [{"name": "stderr", "source": "eee17c3a-af39-4791-8b7a-d478f02773de-attachment.txt", "type": "text/plain"}], "start": 1691096591102, "stop": 1691096594149, "uuid": "25a92e11-e201-4c98-a809-04500337477e", "historyId": "67f0289affb9cac43bb9e195231b2381", "testCaseId": "67f0289affb9cac43bb9e195231b2381", "fullName": "src.tests.e2e#test_register_demo_user_using_practice_form", "labels": [{"name": "story", "value": "With allure steps"}, {"name": "tag", "value": "web"}, {"name": "owner", "value": "abarashkov"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "src.tests"}, {"name": "suite", "value": "e2e"}, {"name": "host", "value": "MBP-Alexander"}, {"name": "thread", "value": "3362-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.e2e"}]}